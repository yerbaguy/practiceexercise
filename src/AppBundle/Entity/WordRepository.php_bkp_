<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\Common\Collections\ArrayCollection;
//use AppBundle\Controller\LearningController;

/**
 * WordRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WordRepository extends EntityRepository
{
    //private $random;

    //public function __construct()
    //{
        //$this->random = $random;
    //}

    public function count()
    {
        //$qb = $repository->createQueryBuilder('t');
        //return $this->createQueryBuilder('t')
        //      ->select('count(t.id)')
        //      ->getQuery()
        //      ->getSingleScalarResult();

//        return $this->getEntityManager()
//              ->createQuery(
//                'Select p FROM AppBundle:Word p ORDER BY p.id ASC'
//              )
//              ->getResult();

         $qb = $this->createQueryBuilder('t');
         return $qb
               ->select('count(t.id)')
               ->getQuery()
               ->getSingleScalarResult();
    }

    //public function pullTheWord($random)
    //{
    //    $qb = $this->createQueryBuilder('t');
    //    return $qb
    //          ->select('t.engWord')
    //          ->from('word','u')
    //          //->where('t.id = :random')
    //          ->where('t.id = ?1')
//  //            ->setParameter('random', $random)
              //->distinct()
    //          ->getQuery();
    //}


    public function pullTheWord($random)
    {
        $qb = $this->createQueryBuilder('d');
        //return $pull[0]['engWord'] = $qb
        return $qb
            ->select(array('d.plWord'))
            ->where('d.id = :id')
            ->setParameter('id', $random)
            ->orderBy('d.plWord')
            ->getQuery();
            //->getResult(\Doctrine\ORM\Query::HIDRATE_ARRAY);
            //->getArrayResult();

    }

    public function takeOut($engWord)
    {
        $qb = $this->createQueryBuilder('w');

        return $qb
              ->select(array('w.id', 'w.engWord'))
              ->where('w.engWord = :engWord')
              ->setParameter('engWord', $engWord)
              ->getQuery();
    }

    public function supportEng($random)
    {
        $qb = $this->createQueryBuilder('w');
        
        return $qb
              ->select(array('w.id', 'w.engWord'))
              ->where('w.id = :id') 
              ->setParameter('id', $random)
              ->getQuery(); 
    }

}
